#!/bin/bash

# Initialize DEBUG_MODE to false
DEBUG_MODE="false"

# Define the profiles directory
PROFILES_DIR="profiles"

# Resolve the current directory where the script is being executed
CURRENT_DIR="$(dirname "$(realpath "$0")")"
LIB_DIR="$CURRENT_DIR/scripts/common"

# Load the log_library
source $LIB_DIR/log.sh

# Export DEBUG_MODE for use in other scripts
export DEBUG_MODE

# Function to parse arguments
parse_args() {
    while getopts ":v" opt; do
        case ${opt} in
        v)
            DEBUG_MODE="true"
            ;;
        \?)
            log_error "Invalid option: -$OPTARG" "install"
            usage
            exit 1
            ;;
        esac
    done
    shift $((OPTIND - 1))
}

# Parse arguments
parse_args "$@"

# Function to display usage information
usage() {
    profiles=()

    for file in "$PROFILES_DIR"/install-*.sh; do
        profile=$(basename "$file" | sed 's/install-//' | sed 's/\.sh//')
        profiles+=("$profile")
    done

    profiles_list=$(printf ", %s" "${profiles[@]}")
    profiles_list=${profiles_list:2}
    log_info "üöÄ Usage: $0 <profile>"
    log_info "üìÉ Available profiles: [$profiles_list]"
}
# Check if an argument is provided
if [ -z "$1" ]; then
    log_error "‚ùå No profile provided."
fi

# Construct the profile script filename
PROFILE_SCRIPT="$PROFILES_DIR/install-$1.sh"

# Check if the profile script exists
if [ ! -f "$PROFILE_SCRIPT" ]; then
    log_error "ü•≤ Profile '$1' does not exist."
    usage
    exit 1
fi

# Display a progress message
log_info "‚è≥ Invoking profile script for '$1'..."

# Execute the profile script and indent its output
chmod +x "$PROFILE_SCRIPT"
"$PROFILE_SCRIPT"

# Display a success message
log_info "üßö Profile script for '$1' executed successfully!"
